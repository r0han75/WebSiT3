// checkboxes to control states and variables
- var n = 1;
  while n < 5
    input(type="radio", name="players", id="players"+n, checked=(n == 1), value=(n++))
- var n = 1;
  while n < 5
    input(type="radio", name="turn", id="turn"+n, checked=(n==1), value=(n++))
- var n = 1;
  while n < 5
    input(type="radio", name="colors", checked=(n == 1), id="colors"+(n++))
input(type="checkbox", id="game-time", class="game-time", name="game-time")
input(type="checkbox", name="show-info", id="show-info")
input(type="checkbox", name="play-fx", id="play-fx")
- var n = 1;
  while n < 6
    input(type="radio", id="show-instructions-"+(n++), class="game-time", name="show-instructions")

// inputs and labels that control the piece position for player 1
each players in [1,2,3,4]
  - var n = 0;
  while n < 107
    input(type="radio", name="cb-player"+players, id="cb-pl"+players+"-"+n, class="cb", checked=(n==0))
    label.dice(for="cb-pl"+players+"-"+(n++))
  
// game settings menu (# of players, colors) 
#options.scrim
  .box
    h1 Game Settings
    div
      h2 Number of players
      div.flex.option-players
        - var n = 1;
        while n < 5
          label(for="players"+n) #{n++}
      h2 Piece colors
      div.option-colors
        - var n = 1;
        while n < 5
          label.flex(for="colors"+(n++))
            span
            span
            span
            span
            span
      h2 Sound options
      label#activate-fx(for="play-fx") FX Sound
      div
        label.option-start(for="show-instructions-1") START GAME
        
// pop-up with information about the game and the author
#info.scrim
  .box
    h1 About
    div
      p Snakes and Ladders is an ancient Indian board game regarded today as a worldwide classic. A number of 'ladders' and 'snakes' are pictured on the board, each connecting two specific board squares. The object of the game is to navigate one's game piece, according to die rolls, from the start (bottom square) to the finish (top square), helped or hindered by ladders and snakes respectively.
        sup
          a(href="https://en.wikipedia.org/wiki/Snakes_and_Ladders", target="_blank") [1]
      p This version was developed by 
        a(href="https://github.com/alvaromontoro", target="_blank") Alvaro Montoro 
        | using HTML and CSS, to practice Pug and Sass, and without any JavaScript line of code.
      p The idea behind this project is that many classic board games are actually Finite-State Machines (FSM), so they can be recreated simulating the states of the automaton with radio buttons, labels, and some CSS styling.
      p
        label#close-button(for="show-info") Close

// animated instructions section
#instructions
  label#go-to-game(for="game-time") SKIP INSTRUCTIONS &rsaquo;
  #step
    div 
      label(for="show-instructions-2")
      label(for="show-instructions-3")
      label(for="show-instructions-4")
      label(for="show-instructions-5")
      label(for="game-time") PLAY &rsaquo;
      
// the game section: board, dice, snakes, ladders, and all that jazz...
#game
  #player-info.tab
    span Player
  //label#dice.tab
  div#action.tab
    label#turn-changer1(for="turn1")
    label#turn-changer2(for="turn2")
    label#turn-changer3(for="turn3")
    label#turn-changer4(for="turn4")
    div#fx-click-action.fx-sound
      embed(src="https://studiokah.com/tests/click2.mp3")
  label#more-info.tab(for="show-info")
  div#fx-click-more-info.fx-sound
    embed(src="https://studiokah.com/tests/click2.mp3")
  // Board based on the one from codewars: https://www.codewars.com/kata/snakes-and-ladders-1 
  #board
    each val in [100,99,98,97,96,95,94,93,92,91,81,82,83,84,85,86,87,88,89,90,80,79,78,77,76,75,74,73,72,71,61,62,63,64,65,66,67,68,69,70,60,59,58,57,56,55,54,53,52,51,41,42,43,44,45,46,47,48,49,50,40,39,38,37,36,35,34,33,32,31,21,22,23,24,25,26,27,28,29,30,20,19,18,17,16,15,14,13,12,11,1,2,3,4,5,6,7,8,9,10]
      div(class="tile tile"+val, data-index=val)
    svg#snakeladders(viewBox="0 0 600 600", preserveAspectRatio="none")
      g.ladders-big
        path(d="M89,574 140,392 M102,578 153,396 M388,581 385,508 M402,580 399,507 M449,552 554,395 M460,560 565,403 M320,516 333,444 M334,518 347,446 M24,436 74,329 M36,442 87,334 M430,458 210,99 M441,450 222,93 M264,393 214,339 M273,384 224,330 M563,284 391,203 M568,271 396,190 M570,149 559,31 M584,148 573,30 M142,158 155,40 M156,160 169,42 M397,101 379,30 M411,97 392,26")
      g.ladders-small
        path(d="M91,568 104,573 M94,556 105,561 M97,544 108,549 M100,532 111,537 M103,520 114,525 M107,508 118,513 M111,496 122,501 M114,484 125,489 M117,472 128,477 M121,460 132,465 M124,448 135,453 M128,436 139,441 M131,424 142,429 M134,412 145,417 M138,400 149,405 M388,575 401,574 M388,563 401,562 M388,552 401,551 M388,541 401,540 M388,530 400,529 M388,518 400,517 M452,546 464,555 M459,536 470,544 M466,526 476,533 M473,516 482,522 M479,508 490,515 M485,498 496,506 M492,488 502,495 M498,479 509,486 M504,469 515,477 M512,459 522,467 M517,449 528,457 M523,440 534,448 M530,430 541,438 M536,421 548,429 M542,412 554,419 M549,402 560,409 M322,510 335,512 M324,498 337,500 M326,486 339,488 M328,475 341,477 M330,463 343,465 M332,452 345,454 M258,388 268,378 M250,379 260,369 M243,370 252,361 M235,362 245,352 M227,353 236,344 M219,345 229,335 M27,430 40,436 M32,419 45,425 M37,408 49,414 M42,398 54,404 M47,388 59,394 M51,377 64,383 M56,366 69,372 M61,356 75,362 M66,345 79,351 M71,335 84,341 M427,453 438,444 M420,443 432,434 M414,433 426,424 M408,423 420,414 M402,413 413,404 M395,402 407,393 M388,391 400,382 M381,379 393,370 M374,368 386,359 M367,356 378,347 M359,344 371,336 M352,332 364,324 M345,320 357,312 M338,308 350,300 M330,296 342,288 M323,284 335,276 M316,272 328,264 M308,260 320,252 M301,248 313,240 M294,236 305,228 M287,224 298,216 M280,212 291,205 M273,200 284,193 M267,188 277,181 M259,175 269,168 M251,163 261,156 M244,151 254,144 M236,139 246,132 M229,127 239,120 M222,115 232,108 M215,103 225,96 M143,152 157,154 M144,140 158,142 M145,128 159,130 M146,116 160,118 M147,104 161,106 M149,92 163,94 M150,80 164,82 M151,68 165,70 M153,56 167,58 M154,44 168,46 M396,95 409,91 M393,84 406,80 M390,73 403,69 M387,62 400,58 M384,51 397,47 M381,40 394,36 M570,143 583,142 M568,130 582,129 M566,117 580,116 M565,104 577,103 M564,91 576,90 M563,78 575,77 M562,65 574,64 M561,52 573,51 M560,38 572,37 M556,281 562,268 M546,276 552,263 M536,271 542,258 M526,266 532,254 M516,261 522,249 M506,255 512,244 M496,250 502,239 M486,245 492,235 M476,240 482,230 M466,236 472,225 M456,231 462,220 M446,226 451,216 M436,221 441,211 M425,218 431,206 M415,213 421,201 M405,208 411,196 M395,204 401,192")
      path(d="M20,42 28,42 28,35 32,35 32,42 40,42 40,32 45,32 30,20 15,32 20,32 Z M20,578 30,578 30,583 40,570 30,557 30,562 20, 562Z", fill="rgba(0,0,0,0.25)")
      path.snake(d="M 90,226 C 98,257 69,322 128,332 187,342 181,381 120,382 59,383 53,425 54,433 56,450 87,467 87,481 87,495 76,506 76,512 84,505 95,496 96,480 97,464 60,447 64,425 68,403 99,392 134,391 169,390 219,344 131,322 94,313 100,279 101,256 102,233 101,229 100,225 105,223.62 106,214 96,210 86,205 65.75,211 83,223 85.88,225 88,226 90,226 Z", fill="#73880A")
      circle.eye(cx=97, cy=212, r=5)
      path.snake(d="M 22,282 C 35,271 58,266 81,273 104,280 144,278 145,253 146,228 175,208 193,213 204,198 220,210 220,216 220,222 201,229 193,221 182,222 157,229 156,252 155,275 139,297 86,281 33,268 22,283 22,283 Z", fill="#D15600")
      circle.eye(cx=203, cy=210, r=5)
      path.snake(d="M 453,271 C 433,285 396,289 400,261 405,233 394,223 369,223 343,224 319,167 376,161 379,168 401,168 402,156 403,143 376,143 375,152 300,162 333,233 366,233 402,233 388,258 389,266 390,281 414,309 453,272 Z", fill="#6BBA70")
      circle.eye(cx=387, cy=148, r=5)
      path.snake(d="M 457,199 C 429,161 465,134 489,158 512,182 542,159 540,129 538,99 523,98 522,98 528,91 505,75 495,97 503,113 518,105 519,105 519,105 530,110 531,130 532,150 513,169 492,149 471,129 445,143 443,159 442,174 449,194 457,200 Z", fill="#C79810")
      circle.eye(cx=512, cy=90, r=5)
      path.snake(d="M 441,95 C 457,93 479,72 445,52 415,33 434,16 451,16 468,16 489,39 492,40 495,28 521,33 521,43 521,54 496,54 490,48 490,48 466,23 450,25 434,27 439,43 459,51 479,61 473,101 441,96 Z", fill="#356AA0")
      circle.eye(cx=504, cy=35, r=5)
      path.snake(d="M 278,457 C 291,438 262,428 247,444 230,464 193,450 231,420 256,400 300,425 335,395 349,381 334,338 334,338 334,338 348,325 325,324 301,322 306,341 326,340 334,358 346,401 285,401 231,401 205,416 205,446 206,472 244,462 250,452 258,441 281,435 278,458 Z", fill="#3F4C6B")
      circle.eye(cx=327, cy=325, r=5)
      path.snake(d="M 343,584 C 352,567 344,553 320,553 296,553 286,562 279,568 272,573 238,592 238,558 237,524 253,517 253,517 253,517 270,517 270,509 270,498 238,501 247,514 227,537 230,556 230,561 229,567 239,605 281,575 324,544 349,562 343,585 Z", fill="#008C00")
      circle.eye(cx=257, cy=503, r=5)
      path.snake(d="M 572,506 C 555,514 511,516 518,456 526,396 518,380 490,388 457,397 436,346 492,335 507,341 518,334 518,326 518,317 494,313 489,326 422,337 448,410 489,398 525,384 510,449 510,456 510,462 502,547 572,508 Z", fill="#D01F3C")
      circle.eye(cx=503, cy=320, r=5)
      path.snake(d="M 19,138 C 45,154 84,152 63,119 43,87 59,85 79,84 99,83 103,77 94,40 85,46 73,39 72,32 72,25 109,13 102,35 117,69 108,100 79,94 52,88 70,114 73,118 82,127 83,190 18,138 Z", fill="#2096cE")
      circle.eye(cx=89, cy=27, r=5)
      path.snake(d="M 322,152 C 302,168 282,153 285,137 287,120 287,121 275,110 263,99 295,79 291,62 287,45 297,30 318,38 324,51 346,48 346,39 347,30 327,20 320,31 295,18 274,33 280,57 286,82 252,86 262,111 265,118 280,122 275,137 271,148 291,185 322,154 Z", fill="#CC4444")
      circle.eye(cx=330, cy=30, r=5)
    each player in [1,2,3,4]
      svg.piece(id="piece-player-"+player, viewBox="0 0 100 100")
        g
          path(d="M 50,1 C 50,1 80,85 80,85 70,96 60,99 50,99 40,99 30,96 20,85 20,85 50,1 50,1 Z")
          circle(cx=50, cy=21, r=20)
          rect(x=44, y=25, width=12, height=22, stroke="none")

#snake-popup.scrim 
  div.box
    h1 Snake!!!
    div Oh no! The snake bit you! You'll have to move your piece to the snake's tail.
      div
        each players in [1,2,3,4]
          each val, index in {16:6, 46:25, 49:11, 62:19, 64:60, 74:53, 89:68, 92:88, 95:75, 99:80}
            label(id="snake-pl"+players+"-"+index, for="cb-pl"+players+"-"+val) Move Down
    svg(viewBox="0 0 100 100")
      path(d="M1,32 4,32 M6,34 4,32 M4,32 10,20", stroke="black", stroke-width="1")
      path(d="M 30,70 C 49,56 60,84 33,92 -17,103 0,50 24,45 32,44 37,41 29,27 26,33 5,35 3,24 4,13 26,3 37,16 49,30 49,52 28,55 8,59 0,94 33,82 56,72 35,66 30,71 Z", fill="#73B80A", stroke-width="0")
      circle(cx=18, cy=15, r=5, fill="black", stroke="white", stroke-width=6)
      
    
#ladder-popup.scrim
  div.box
    h1 Ladder!
    div Yay! You found a ladder! You can climb up now.
      div
        each players in [1,2,3,4]
          each val, index in {2:38, 7:14, 8:31, 15:26, 21:42, 28:84, 36:44, 51:67, 71:91, 78:98, 87:94}
            label(id="ladder-pl"+players+"-"+index, for="cb-pl"+players+"-"+val) Move Up
    svg(viewBox="0 0 100 100")
      path(d="M5,85 20,10", stroke="#8B4513", stroke-width="10", "stroke-linecap"="round")
      path(d="M10,67 30,71 M15,45 35,49 M20,23 40,27", stroke="#aB6533", stroke-width="5", "stroke-linecap"="round")
      path(d="M30,90 45,15", stroke="#8B4513", stroke-width="10", "stroke-linecap"="round")
      
#home-popup.scrim
  div.box
    h1 Home
    div You made it home, but you didn't do it in an exact jump so you will bounce back the remaining tiles.
      div
        each players in [1,2,3,4]
          each val, index in {101:99, 102:98, 103:97, 104:96, 105:95, 106:94}
            label(id="home-pl"+players+"-"+index, for="cb-pl"+players+"-"+val) Bounce back
    svg(viewBox="0 0 100 100")
      path(d="M12,85 12,40 5,40 30,5 55,40 48,40 48,85 35,85 35,60 25,60 25,85 Z", fill="#8Ba5f3")
      path(d="M30,65 C 30,60 25,55 20,55 15,55 10,60 10,65 10,70 15,75 20,75 20,75 20,75 50,75 M40,65 50,75 40,85", stroke="#eeee60", stroke-width=6, fill="none")
      
#congratulations.scrim
  div.box
    h1 Congratulations!
    div You made it home safely! You won!
    div Reload the page to play again.
    svg(viewBox="0 0 100 100")
      path(d="M5,10 C 5,10 65,10 65,10 65,10 65,40 65,40 65,50 55,70 35,70 15,70 5,50 5,40 Z", fill="#fede60")
      path(d="M35,40 35,85 M20,85 50,85", stroke="#fede60", stroke-width=12, fill="none", stroke-linecap="round")
    
div#fx-dice.fx-sound
  embed(src="https://studiokah.com/tests/dice.mp3")
div#fx-click.fx-sound
  // Click sound by Sebastian. Source: http://soundbible.com/1705-Click2.html
  embed(src="https://studiokah.com/tests/click2.mp3")